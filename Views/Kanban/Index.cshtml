@model IEnumerable<ProjektZeiterfassung.Models.Projekt>
@{
    ViewData["Title"] = "Kanban Boards";
    // Safe conversions with null checks
    var assignedTasks = ViewBag.AssignedTasks as List<ProjektZeiterfassung.Models.KanbanCard> ?? new List<ProjektZeiterfassung.Models.KanbanCard>();
    var mitarbeiterNr = ViewBag.MitarbeiterNr as int?;
}

<!-- Add global board link at the top -->
<div class="row mb-4">
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <a asp-controller="KanbanGlobal" asp-action="GlobalBoard" class="btn btn-primary btn-lg w-100">
                    <i class="bi bi-kanban"></i> Global Task Board - View All Projects
                </a>
            </div>
        </div>
    </div>
</div>


<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <h2>Kanban Boards</h2>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover" id="projectsTable">
                        <thead>
                            <tr>
                                <th data-sort="number">Project Number</th>
                                <th data-sort="string">Project Name</th>
                                <th data-sort="string">Customer</th>
                                <th data-sort="string">Board ID</th>
                                <th data-sort="number">Tasks</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model == null || !Model.Any())
                            {
                                <tr>
                                    <td colspan="6" class="text-center">No projects found.</td>
                                </tr>
                            }
                            else
                            {
                                foreach (var projekt in Model)
                                {
                                    // Get task count from ViewBag if it exists
                                    int taskCount = ViewBag.ProjektTaskCounts != null &&
                                                   ViewBag.ProjektTaskCounts.ContainsKey(projekt.Projektnummer)
                                                   ? ViewBag.ProjektTaskCounts[projekt.Projektnummer]
                                                   : 0;
                                    <tr>
                                        <td>@projekt.Projektnummer</td>
                                        <td>@projekt.Projektbezeichnung</td>
                                        <td>@projekt.Kunde?.Kundenname</td>
                                        <td>@(projekt.BoardGUID ?? "Not generated")</td>
                                        <td>@taskCount</td>
                                        <td>
                                            <div class="btn-group d-flex" role="group">
                                                <a asp-action="Board" asp-route-id="@projekt.Projektnummer" class="btn btn-outline-primary w-130">
                                                    <i class="bi bi-kanban"></i> Open
                                                </a>
                                                <a asp-action="Buckets" asp-route-id="@projekt.Projektnummer" class="btn btn-outline-secondary w-130">
                                                    <i class="bi bi-gear"></i> Buckets
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="mt-3">
    <a asp-controller="Home" asp-action="Index" class="btn btn-secondary">
        <i class="bi bi-arrow-left"></i> Back
    </a>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Table sorting functionality
            $("#projectsTable th[data-sort]").each(function() {
                $(this).css('cursor', 'pointer');
                $(this).append(' <i class="bi bi-arrow-down-up text-muted"></i>');
            });
            $("#projectsTable th[data-sort]").click(function() {
                var table = $(this).parents('table').eq(0);
                var rows = table.find('tr:gt(0)').toArray().sort(comparer($(this).index()));
                var dir = $(this).hasClass('asc') ? 'desc' : 'asc';
                // Update sorting indicators
                table.find('th').removeClass('asc desc');
                $(this).addClass(dir);
                table.find('th i').removeClass('bi-arrow-down bi-arrow-up').addClass('bi-arrow-down-up text-muted');
                // Update icon based on direction
                if (dir === 'asc') {
                    $(this).find('i').removeClass('bi-arrow-down-up text-muted').addClass('bi-arrow-up');
                } else {
                    $(this).find('i').removeClass('bi-arrow-down-up text-muted').addClass('bi-arrow-down');
                }
                // If direction is desc, reverse the array
                if (dir === 'desc') rows = rows.reverse();
                // Reattach rows to table
                for (var i = 0; i < rows.length; i++) {
                    table.append(rows[i]);
                }
            });
            // Comparison function for sorting
            function comparer(index) {
                var sortType = $("#projectsTable th").eq(index).data('sort');
                return function(a, b) {
                    var valA = getCellValue(a, index);
                    var valB = getCellValue(b, index);
                    if (sortType === 'number') {
                        return parseFloat(valA) - parseFloat(valB);
                    } else {
                        return valA.toString().localeCompare(valB);
                    }
                };
            }
            // Helper function to get cell value
            function getCellValue(row, index) {
                return $(row).children('td').eq(index).text();
            }
        });
    </script>
}